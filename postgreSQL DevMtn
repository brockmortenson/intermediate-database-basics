-- SELECT * FROM invoice
-- JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
-- WHERE invoice_line.unit_price > .99;

-- SELECT invoice.invoice_date, customer.first_name, customer.last_name, invoice.total
-- FROM invoice
-- JOIN customer ON invoice.customer_id = customer.customer_id;

-- SELECT customer.first_name, customer.last_name, employee.first_name, employee.last_name 
-- FROM customer
-- JOIN employee ON customer.support_rep_id = employee.employee_id;


	-- for some reason this won't run --
-- SELECT album.title, artist.name
-- FROM album
-- JOIN artist ON album.artist_id = artist.artist.id;

	-- I originally has FROM playlist and it still worked --
-- SELECT playlist_track.track_id
-- FROM playlist_track
-- JOIN playlist ON playlist.playlist_id = playlist_track.playlist_id
-- WHERE playlist.name = 'Music';

-- SELECT track.name
-- FROM track
-- JOIN playlist_track ON playlist_track.track_id = track.track_id
-- WHERE playlist_track.playlist_id = 5;

-- SELECT track.name, playlist.name
-- FROM track
-- JOIN playlist_track ON playlist_track.track_id = track.track_id
-- JOIN playlist ON playlist_track.playlist_id = playlist.playlist_id;

-- SELECT track.name, album.title
-- FROM track
-- JOIN album ON track.album_id =  album.album_id
-- JOIN genre ON track.genre_id = genre.genre_id
-- WHERE genre.name = 'Alternative & Punk';


		-- NESTED QUERIES --

-- SELECT * FROM invoice
-- WHERE invoice_id IN (
--   SELECT invoice_id FROM invoice_line
--   WHERE unit_price > .99
-- );

-- SELECT * FROM playlist_track
-- WHERE playlist_id IN (
-- 	SELECT playlist_id FROM playlist
--   WHERE name = 'Music'
-- );

-- SELECT * FROM track
-- WHERE track_id IN (
-- 	SELECT track_id FROM playlist_track
--   WHERE playlist_id = 5
-- );

-- SELECT * FROM track
-- WHERE genre_id IN (
-- 	SELECT genre_id FROM genre
--   WHERE genre.name = 'Comedy'
-- );

-- SELECT * FROM track
-- WHERE album_id IN (
-- 	SELECT album_id FROM album
--   WHERE album.title = 'Fireball'
-- );

-- SELECT * FROM track
-- WHERE album_id IN (
--   SELECT album_id FROM album
--   WHERE artist_id IN (
--   	SELECT artist_id FROM artist
--     WHERE artist.name = 'Queen'
--   )
-- );

	-- UPDATING ROWS --

-- UPDATE customer
-- SET fax = NULL
-- WHERE fax IS NOT NULL;

-- UPDATE customer
-- SET company = 'Self'
-- WHERE company IS NULL;

-- UPDATE customer
-- SET last_name = 'Thompson'
-- WHERE first_name = 'Julia' AND last_name = 'Barnett';

-- UPDATE customer
-- SET support_rep_id = 4
-- WHERE email = 'luisrojas@yahoo.cl';

-- UPDATE track
-- SET composer = 'The darkness around us'
-- WHERE genre_id = (
--   SELECT genre_id FROM genre
--   WHERE genre.name = 'Metal' AND composer IS NULL
-- );

	-- GROUP BY -- 

-- SELECT COUNT(*), genre.name FROM track
-- JOIN genre ON track.genre_id = genre.genre_id
-- GROUP BY genre.name;

-- SELECT COUNT(*), genre.name FROM track
-- JOIN genre on track.genre_id = genre.genre_id
-- WHERE genre.name = 'Pop' OR genre.name = 'Rock'
-- GROUP BY genre.name;

-- SELECT COUNT(*), artist.name FROM album
-- JOIN artist ON album.artist_id = artist.artist_id
-- GROUP BY artist.name;


	-- DINTINCT --
  
-- SELECT DISTINCT composer FROM track;

-- SELECT DISTINCT billing_postal_code FROM invoice;

-- SELECT DISTINCT company FROM customer;


	-- DELETE --
  
-- CREATE TABLE practice_delete ( name TEXT, type TEXT, value INTEGER );
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'bronze', 50);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'silver', 100);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'silver', 100);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);
-- INSERT INTO practice_delete ( name, type, value ) VALUES ('delete', 'gold', 150);

-- SELECT * FROM practice_delete;

-- DELETE FROM practice_delete
-- WHERE type = 'bronze';

-- DELETE FROM practice_delete
-- WHERE type = 'silver';

-- DELETE FROM practice_delete
-- WHERE value = 150;


	-- NO HINTS --
  
-- CREATE TABLE users (
--   user_id SERIAL PRIMARY KEY,
--  	name VARCHAR(255),
-- 	    email VARCHAR(255)
-- );

-- CREATE TABLE products (
--   products_id SERIAL PRIMARY KEY,
--   name VARCHAR(255),
--   price INTEGER
-- );
-- not sure how to reference/continue from here --
-- CREATE TABLE orders (
--   order_id SERIAL PRIMARY KEY,
  
-- );